#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp(ql:quickload '() :silent t)
  )

(defpackage :ros.script.generate-metadata.3860756854
  (:use :cl))
(in-package :ros.script.generate-metadata.3860756854)

(defun metadata-string (tx-hash ipfs-images-dir-cid)
  (format nil "{
  \"name\": \"draw-something (transactions) 0x~:@(~a~)\",
  \"description\": \"A depiction of the cryptographic hash identifier for the Ethereum transaction that created this token. Its inner form is the hash rendered as lines rather than as the customary hexadecimal digits. Around this, an outer form is drawn by code that simulates the artist's freehand drawing method.\",
  \"image\": \"ipfs://~a/~a.png\"
}" tx-hash ipfs-images-dir-cid tx-hash))

(defun metadata-save (token-id tx-hash ipfs-images-dir-cid)
  (with-open-file (outfile (format nil "./metadata/~a" token-id)
                           :direction :output)
    (format outfile (metadata-string tx-hash ipfs-images-dir-cid))))

(defun main (&rest argv)
  (ensure-directories-exist "./metadata/")
  (let ((ipfs-images-dir-cid (car argv)))
    (assert ipfs-images-dir-cid)
    (with-open-file (in "./tx-hashes")
      (let ((specs (read in)))
        (dolist (spec specs)
          do (metadata-save (car spec) (cdr spec) ipfs-images-dir-cid))))))
;;; vim: set ft=lisp lisp:
